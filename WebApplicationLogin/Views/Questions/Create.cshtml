@using WebApplicationLogin.Models.ViewModels
@model QuestionViewModel

@{
    ViewBag.Title = "Create";
}

<h2>Create</h2>

<script src="~/Scripts/jquery-1.10.2.min.js"></script>


@using (Html.BeginForm())
{
    @Html.AntiForgeryToken()
    
    <div class="form-horizontal">
        <h4>Question</h4>
        <hr />
        @Html.ValidationSummary(true, "", new { @class = "text-danger" })
        <div class="form-group">
            @Html.LabelFor(model => model.Content, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.Content, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.Content, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.GoodAnswer, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.GoodAnswer, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.GoodAnswer, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.BadAnswer, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.BadAnswer, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.BadAnswer, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.Points, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.Points, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.Points, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.QuizIds, "QuizIds", htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.DropDownList("QuizIds", new MultiSelectList(new List<QuizViewModel>(),"id", "name", Model.QuizIds), new { multiple = "multiple" })
                @*@Html.DropDownList("QuizIds", null, htmlAttributes: new { @class = "form-control" })*@
                @Html.ValidationMessageFor(model => model.QuizIds, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            <div class="col-md-offset-2 col-md-10">
                <input type="submit" value="Create" class="btn btn-default" />
            </div>
        </div>
    </div>
}

<div>
    @Html.ActionLink("Back to List", "Index")
</div>

@section Scripts {
    @Scripts.Render("~/bundles/jqueryval")
}

<script>
    var getQuizsUrl = '@Url.Action("GetQuizs","Questions")';
    function getQuizs() {
        $.ajax({
            type: 'GET',
            url: getQuizsUrl,
            datatype: "Json",
            success: function (data) {
                var ddl = $('#QuizIds');
                ddl.empty();
                $(data).each(function () {
                    $("#QuizIds").html("");
                    $.each(data, function (index, item) {
                        ddl.append(new Option(item.Text, item.Value));
                    });
                });
            }
        });
    }
    $(document).ready(function () {
        getQuizs();
    });

</script>
